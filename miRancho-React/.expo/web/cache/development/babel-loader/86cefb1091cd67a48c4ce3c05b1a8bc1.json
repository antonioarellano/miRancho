{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NativeBaseProvider } from 'native-base';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport * as screens from \"./screens\";\nimport { UserContext } from \"./UserContext\";\nvar NavLogin = createNativeStackNavigator();\nvar NavRancho = createDrawerNavigator();\nvar NavMain = createNativeStackNavigator();\n\nvar Inicio = function Inicio(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(NavLogin.Navigator, null, React.createElement(NavLogin.Screen, {\n    name: \"login\",\n    component: screens.LogIn\n  }), React.createElement(NavLogin.Screen, {\n    name: \"singin\",\n    component: screens.SingIn\n  }), React.createElement(NavLogin.Screen, {\n    name: \"terms\",\n    component: screens.Terms\n  }));\n};\n\nvar Rancho = function Rancho(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(NavRancho.Navigator, {\n    initialRouteName: \"ganado\"\n  }, React.createElement(NavRancho.Screen, {\n    name: \"ganado\",\n    component: screens.Ganado\n  }), React.createElement(NavRancho.Screen, {\n    name: \"vacunas\",\n    component: screens.Vacunas\n  }), React.createElement(NavRancho.Screen, {\n    name: \"ctlSanitario\",\n    component: screens.ControlSan\n  }), React.createElement(NavRancho.Screen, {\n    name: \"embarazo\",\n    component: screens.ControlRep\n  }), React.createElement(NavRancho.Screen, {\n    name: \"pesaje\",\n    component: screens.Pesaje\n  }), React.createElement(NavRancho.Screen, {\n    name: \"predios\",\n    component: screens.Predio\n  }), React.createElement(NavRancho.Screen, {\n    name: \"configuracion\",\n    component: screens.Configuracion\n  }));\n};\n\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var providerValue = useMemo(function () {\n    return {\n      user: user,\n      setUser: setUser\n    };\n  }, [user, setUser]);\n  return React.createElement(NativeBaseProvider, null, React.createElement(UserContext.Provider, {\n    value: providerValue\n  }, React.createElement(NavigationContainer, null, React.createElement(NavLogin.Navigator, {\n    screenOptions: {\n      headerShown: false\n    }\n  }, React.createElement(NavMain.Screen, {\n    name: \"inicio\",\n    component: Inicio\n  }), React.createElement(NavMain.Screen, {\n    name: \"rancho\",\n    component: Rancho\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/home/doncrow/miRancho/miRancho-React/App.js"],"names":["React","useState","useMemo","NativeBaseProvider","NavigationContainer","createNativeStackNavigator","createDrawerNavigator","screens","UserContext","NavLogin","NavRancho","NavMain","Inicio","navigation","LogIn","SingIn","Terms","Rancho","Ganado","Vacunas","ControlSan","ControlRep","Pesaje","Predio","Configuracion","App","user","setUser","providerValue","headerShown","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["\nimport React, { useState, useMemo } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {NativeBaseProvider} from 'native-base';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport * as screens from './screens';\nimport { UserContext } from './UserContext';\n\nconst NavLogin = createNativeStackNavigator();\nconst NavRancho = createDrawerNavigator();\nconst NavMain = createNativeStackNavigator();\n\n\nconst Inicio = ({navigation}) => {\n  return(          \n    <NavLogin.Navigator>\n      <NavLogin.Screen name='login' component={screens.LogIn}/>\n      <NavLogin.Screen name='singin' component={screens.SingIn}/>\n      <NavLogin.Screen name='terms' component={screens.Terms}/>\n    </NavLogin.Navigator>\n  );\n}\nconst Rancho = ({navigation}) => {\n  return (\n    <NavRancho.Navigator initialRouteName=\"ganado\">\n        <NavRancho.Screen name='ganado' component={screens.Ganado}/>\n        <NavRancho.Screen name='vacunas' component={screens.Vacunas}/>\n        <NavRancho.Screen name='ctlSanitario' component={screens.ControlSan}/>\n        <NavRancho.Screen name='embarazo' component={screens.ControlRep}/>\n        <NavRancho.Screen name='pesaje' component={screens.Pesaje}/>\n        <NavRancho.Screen name='predios' component={screens.Predio}/>\n        <NavRancho.Screen name='configuracion' component={screens.Configuracion}/>\n    </NavRancho.Navigator>\n  );\n}\n\nexport default function App() {\n  const [user, setUser] = useState(null);\n  const providerValue = useMemo(()=> ({user,setUser}), [user,setUser]);\n  \n  return (\n    <NativeBaseProvider >\n      <UserContext.Provider value= {providerValue}>\n        <NavigationContainer>\n          <NavLogin.Navigator screenOptions={{headerShown: false}}>\n            <NavMain.Screen name='inicio' component={Inicio} />\n            <NavMain.Screen name='rancho' component={Rancho} />\n          </NavLogin.Navigator>\n        </NavigationContainer>\n      </UserContext.Provider>\n    </NativeBaseProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}