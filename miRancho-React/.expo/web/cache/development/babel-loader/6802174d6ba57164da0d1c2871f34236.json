{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { Button, NativeBaseProvider, Box, Input, FormControl, VStack, Checkbox, Link, Switch, Select, Radio } from 'native-base';\nimport DatePicker from \"react-datepicker\";\nimport { UserContext } from \"./UserContext\";\nimport moment from 'moment';\nexport var LogIn = function LogIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      errors = _React$useState4[0],\n      setError = _React$useState4[1];\n\n  var setUser = React.useContext(UserContext);\n\n  var getUser = function getUser() {\n    return _regeneratorRuntime.async(function getUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(data.user, data.pass);\n            return _context.abrupt(\"return\", data.user);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleLogin = function handleLogin() {\n    navigation.navigate('rancho');\n  };\n\n  return React.createElement(NativeBaseProvider, null, React.createElement(Box, null, React.createElement(VStack, null, React.createElement(FormControl, {\n    isRequired: true,\n    isInvalid: 'user' in errors\n  }, React.createElement(FormControl.Label, null, \"Nombre de Usuario\"), React.createElement(Input, {\n    placeholder: \"Usuario\",\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        user: value\n      }));\n    }\n  }), 'user' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.user) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isRequired: true,\n    isInvalid: 'pass' in errors\n  }, React.createElement(FormControl.Label, null, \"Contrase\\xF1a\"), React.createElement(Input, {\n    placeholder: \"Contrase\\xF1a\",\n    type: \"password\",\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        pass: value\n      }));\n    }\n  }), 'pass' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.pass) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate('rancho');\n    }\n  }, \"Entrar\")), React.createElement(Box, null, React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate('singin');\n    }\n  }, \"No tengo cuenta\")));\n};\nexport var SingIn = function SingIn(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _React$useState5 = React.useState({}),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      data = _React$useState6[0],\n      setData = _React$useState6[1];\n\n  var _React$useState7 = React.useState({}),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      errors = _React$useState8[0],\n      setError = _React$useState8[1];\n\n  var HandleRegister = function HandleRegister() {\n    if (data.user === undefined) {\n      setError.apply(void 0, _toConsumableArray(errors).concat([{\n        user: 'Se necesita usuario'\n      }]));\n      return false;\n    }\n\n    if (data.pass === undefined) {\n      setError.apply(void 0, _toConsumableArray(errors).concat([{\n        pass: 'Se necesita contraseña'\n      }]));\n      return false;\n    }\n\n    if (data.cpass === undefined) {\n      setError.apply(void 0, _toConsumableArray(errors).concat([{\n        pass: 'Se necesita confirmar la contraseña'\n      }]));\n      return false;\n    }\n\n    if (data.name === undefined) {\n      setError.apply(void 0, _toConsumableArray(errors).concat([{\n        name: 'Se necesita el nombre'\n      }]));\n      return false;\n    }\n\n    if (data.address === undefined) {\n      setError.apply(void 0, _toConsumableArray(errors).concat([{\n        address: 'Se necesita domicilio'\n      }]));\n      return false;\n    }\n\n    if (data.phone === undefined) {\n      setError.apply(void 0, _toConsumableArray(errors).concat([{\n        phone: 'Se necesita número de celular'\n      }]));\n      return false;\n    }\n\n    if (data.terms === undefined) {\n      setError.apply(void 0, _toConsumableArray(errors).concat([{\n        terms: 'Se aceptar los términos y condiciones de uso'\n      }]));\n      return false;\n    }\n\n    if (data.pass != data.cpass) {\n      setError.apply(void 0, _toConsumableArray(errors).concat([{\n        pass: 'Las contraseñas no coinciden'\n      }]));\n      return false;\n    }\n  };\n\n  return React.createElement(NativeBaseProvider, null, React.createElement(VStack, null, React.createElement(FormControl, {\n    isRequired: true,\n    isInvalid: 'user' in errors\n  }, React.createElement(FormControl.Label, null, \"Nombre de Usuario (Se sugiere usar la CURP)\"), React.createElement(Input, {\n    p: 2,\n    placeholder: \"Usuario\",\n    onChangeText: function onChangeText(value) {\n      return setData.apply(void 0, _toConsumableArray(data).concat([{\n        user: value\n      }]));\n    }\n  }), 'user' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.user) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isRequired: true,\n    isInvalid: 'pass' in errors\n  }, React.createElement(FormControl.Label, null, \"Contrase\\xF1a\"), React.createElement(Input, {\n    p: 2,\n    placeholder: \"Contrase\\xF1a\",\n    onChangeText: function onChangeText(value) {\n      return setData.apply(void 0, _toConsumableArray(data).concat([{\n        pass: value\n      }]));\n    },\n    type: \"password\"\n  }), React.createElement(Input, {\n    p: 2,\n    placeholder: \"Confirmar contrase\\xF1a\",\n    onChangeText: function onChangeText(value) {\n      return setData.apply(void 0, _toConsumableArray(data).concat([{\n        cpass: value\n      }]));\n    },\n    type: \"password\"\n  }), 'pass' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.pass) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isRequired: true,\n    isInvalid: 'name' in errors\n  }, React.createElement(FormControl.Label, null, \"Nombre Completo\"), React.createElement(Input, {\n    p: 2,\n    placeholder: \"Nombre\",\n    onChangeText: function onChangeText(value) {\n      return setData.apply(void 0, _toConsumableArray(data).concat([{\n        name: value\n      }]));\n    }\n  }), 'name' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.name) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Escriba nombre completo\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isRequired: true,\n    isInvalid: 'address' in errors\n  }, React.createElement(FormControl.Label, null, \"Domicilio\"), React.createElement(Input, {\n    p: 2,\n    placeholder: \"Domicilio\",\n    onChangeText: function onChangeText(value) {\n      return setData.apply(void 0, _toConsumableArray(data).concat([{\n        address: value\n      }]));\n    }\n  }), 'address' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.address) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Agregue un domicilio\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isRequired: true,\n    isInvalid: 'phone' in errors\n  }, React.createElement(FormControl.Label, null, \"Tel\\xE9fono\"), React.createElement(Input, {\n    p: 2,\n    placeholder: \"Tel\\xE9fono\",\n    onChangeText: function onChangeText(value) {\n      return setData.apply(void 0, _toConsumableArray(data).concat([{\n        phone: value\n      }]));\n    }\n  }), 'user' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.phone) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isRequired: true,\n    isInvalid: 'terms' in errors\n  }, React.createElement(Checkbox, {\n    onChange: function onChange() {\n      return setData.apply(void 0, _toConsumableArray(data).concat([{\n        terms: value\n      }]));\n    }\n  }, \"Aceptar\", React.createElement(Link, {\n    onPress: function onPress() {\n      return navigation.navigate('terms');\n    }\n  }, \" terminos y condiciones de uso\")))), React.createElement(VStack, null, React.createElement(Button, {\n    onPress: HandleRegister\n  }, \"Registrar\")));\n};\nexport var Terms = function Terms(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(NativeBaseProvider, null, React.createElement(Box, null, \"Aqui estan los terminos y condiciones jeje\"));\n};\nvar animal = {\n  arete: '',\n  nombre: '',\n  sexo: '',\n  fecha: new Date(moment().format('DD-MM-YYYY')),\n  raza: '',\n  color: '',\n  predio: ''\n};\nexport var Ganado = function Ganado(_ref4) {\n  var navigation = _ref4.navigation;\n\n  var _React$useState9 = React.useState({\n    type: 'arete',\n    word: ''\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      key = _React$useState10[0],\n      setKey = _React$useState10[1];\n\n  var _React$useState11 = React.useState(animal),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      data = _React$useState12[0],\n      setData = _React$useState12[1];\n\n  var _React$useState13 = React.useState({}),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      errors = _React$useState14[0],\n      setErrors = _React$useState14[1];\n\n  var user = React.useContext(UserContext);\n  return React.createElement(NativeBaseProvider, null, React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: key.type,\n    mt: 1,\n    onValueChange: function onValueChange(itemValue) {\n      return setKey(_objectSpread(_objectSpread({}, key), {}, {\n        type: itemValue\n      }));\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Nombre\",\n    value: \"nombre\"\n  }), React.createElement(Select.Item, {\n    label: \"Arete\",\n    value: \"arete\"\n  })), React.createElement(FormControl, {\n    isInvalid: 'search' in errors\n  }, React.createElement(FormControl.Label, null, \"Busqueda\"), React.createElement(Input, {\n    placeholder: key.type,\n    onChangeText: function onChangeText(value) {\n      return setkey(_objectSpread(_objectSpread({}, key), {}, {\n        word: value\n      }));\n    }\n  }), 'key' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.key) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\")), React.createElement(Button, null, \"Buscar\")), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'arete' in errors\n  }, React.createElement(FormControl.Label, null, \"Arete\"), React.createElement(Input, {\n    placeholder: data.arete\n  }), 'arete' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.arete) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'nombre' in errors\n  }, React.createElement(FormControl.Label, null, \"Nombre\"), React.createElement(Input, {\n    placeholder: data.nombre,\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        nombre: value\n      }));\n    }\n  }), 'nombre' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.nombre) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'sexo' in errors\n  }, React.createElement(FormControl.Label, null, \"Sexo\"), React.createElement(Radio.Group, {\n    name: \"sexo\",\n    accessibilityLabel: \"sexo\",\n    value: data.sexo,\n    onChange: function onChange(nextValue) {\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        sexo: nextValue\n      }));\n    }\n  }, React.createElement(Radio, {\n    value: \"M\",\n    my: 1\n  }, \"Masculino\"), React.createElement(Radio, {\n    value: \"F\",\n    my: 1\n  }, \"Femenino\")), 'sexo' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.sexo) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'fecha' in errors\n  }, React.createElement(FormControl.Label, null, \"Fecha\"), React.createElement(DatePicker, {\n    selected: data.fecha,\n    onChange: function onChange(date) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        fecha: date\n      }));\n    }\n  }), 'fecha' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.fecha) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'raza' in errors\n  }, React.createElement(FormControl.Label, null, \"Raza\"), React.createElement(Input, {\n    placeholder: data.raza,\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        raza: value\n      }));\n    }\n  }), 'raza' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.raza) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'color' in errors\n  }, React.createElement(FormControl.Label, null, \"Color\"), React.createElement(Input, {\n    placeholder: data.color,\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        color: value\n      }));\n    }\n  }), 'color' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.color) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'predio' in errors\n  }, React.createElement(FormControl.Label, null, \"Predio\"), React.createElement(Input, {\n    placeholder: data.predio,\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        predio: value\n      }));\n    }\n  }), 'predio' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.predio) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(Button, null, \"Crear\"), React.createElement(Button, null, \"Actualizar\"), React.createElement(Button, null, \"Eliminar\")), React.createElement(VStack, null, React.createElement(Button, null, \"Control Sanitario\"), React.createElement(Button, null, \"Control Reproductivo\"), React.createElement(Button, null, \"Vacunas\"), React.createElement(Button, null, \"Pesajes\")));\n};\nvar vacuna = {\n  codigo: '',\n  nombre: '',\n  fecha: new Date()\n};\nexport var Vacunas = function Vacunas(_ref5) {\n  var navigation = _ref5.navigation;\n\n  var _React$useState15 = React.useState({\n    type: 'arete',\n    word: ''\n  }),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      key = _React$useState16[0],\n      setKey = _React$useState16[1];\n\n  var _React$useState17 = React.useState(vacuna),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      data = _React$useState18[0],\n      setData = _React$useState18[1];\n\n  var _React$useState19 = React.useState({}),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      errors = _React$useState20[0],\n      setErrors = _React$useState20[1];\n\n  var user = React.useContext(UserContext);\n  return React.createElement(NativeBaseProvider, null, React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: key.type,\n    placeholder: \"Busqueda\",\n    mt: 1,\n    onValueChange: function onValueChange(itemValue) {\n      return setKey(_objectSpread(_objectSpread({}, key), {}, {\n        type: itemValue\n      }));\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Nombre\",\n    value: \"nombre\"\n  }), React.createElement(Select.Item, {\n    label: \"Fecha\",\n    value: \"fecha\"\n  })), React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Busqueda\"), React.createElement(Input, {\n    placeholder: key,\n    onChangeText: function onChangeText(value) {\n      return setkey(_objectSpread(_objectSpread({}, key), {}, {\n        word: value\n      }));\n    }\n  }), 'key' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.key) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\")), React.createElement(Button, null, \"Buscar\")), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'codigo' in errors\n  }, React.createElement(FormControl.Label, null, \"Codigo\"), React.createElement(Input, {\n    placeholder: \"Codigo\",\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        codigo: value\n      }));\n    }\n  }))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'nombre' in errors\n  }, React.createElement(FormControl.Label, null, \"Codigo\"), React.createElement(Input, {\n    placeholder: \"Nombre\",\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        nombre: value\n      }));\n    }\n  }))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'fecha' in errors\n  }, React.createElement(FormControl.Label, null, \"Fecha\"), React.createElement(DatePicker, {\n    selected: data.fecha,\n    onChange: function onChange(date) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        fecha: date\n      }));\n    }\n  }), 'fecha' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.fecha) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(Button, null, \"Crear\"), React.createElement(Button, null, \"Actualizar\"), React.createElement(Button, null, \"Borrar\")));\n};\nvar ctlSanitario = {\n  codigo: '',\n  nombre: '',\n  fecha: new Date()\n};\nexport var ControlSan = function ControlSan(_ref6) {\n  var navigation = _ref6.navigation;\n\n  var _React$useState21 = React.useState({\n    type: 'nombre',\n    word: ''\n  }),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      key = _React$useState22[0],\n      setKey = _React$useState22[1];\n\n  var _React$useState23 = React.useState(ctlSanitario),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      data = _React$useState24[0],\n      setData = _React$useState24[1];\n\n  var _React$useState25 = React.useState({}),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      errors = _React$useState26[0],\n      setErrors = _React$useState26[1];\n\n  var user = React.useContext(UserContext);\n  return React.createElement(NativeBaseProvider, null, React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: key.type,\n    minWidth: \"200\",\n    placeholder: \"Busqueda\",\n    mt: 1,\n    onValueChange: function onValueChange(itemValue) {\n      return setKey(_objectSpread(_objectSpread({}, key), {}, {\n        type: itemValue\n      }));\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Nombre\",\n    value: \"nombre\"\n  }), React.createElement(Select.Item, {\n    label: \"Fecha\",\n    value: \"fecha\"\n  })), React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Busqueda\"), React.createElement(Input, {\n    placeholder: key.type,\n    onChangeText: function onChangeText(value) {\n      return setkey(_objectSpread(_objectSpread({}, key), {}, {\n        word: value\n      }));\n    }\n  }), 'key' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.key) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\")), React.createElement(Button, null, \"Buscar\")), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'codigo' in errors\n  }, React.createElement(FormControl.Label, null, \"Codigo\"), React.createElement(Input, {\n    placeholder: \"Codigo\",\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        codigo: value\n      }));\n    }\n  }))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'nombre' in errors\n  }, React.createElement(FormControl.Label, null, \"Codigo\"), React.createElement(Input, {\n    placeholder: \"Nombre\",\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        nombre: value\n      }));\n    }\n  }))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'fecha' in errors\n  }, React.createElement(FormControl.Label, null, \"Fecha\"), React.createElement(DatePicker, {\n    selected: data.fecha,\n    onChange: function onChange(date) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        fecha: date\n      }));\n    }\n  }), 'fecha' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.fecha) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(Button, null, \"Crear\"), React.createElement(Button, null, \"Actualizar\"), React.createElement(Button, null, \"Borrar\")));\n};\nvar embarazo = {\n  codigo: '',\n  inicio: new Date(),\n  fin: new Date()\n};\nexport var ControlRep = function ControlRep(_ref7) {\n  var navigation = _ref7.navigation;\n  React.createElement(NativeBaseProvider, null, React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: key.type,\n    minWidth: \"200\",\n    placeholder: \"Busqueda\",\n    mt: 1,\n    onValueChange: function onValueChange(itemValue) {\n      return setKey(_objectSpread(_objectSpread({}, key), {}, {\n        type: itemValue\n      }));\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Arete\",\n    value: \"codigo\"\n  }), React.createElement(Select.Item, {\n    label: \"Fecha\",\n    value: \"fecha\"\n  })), React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Busqueda\"), React.createElement(Input, {\n    placeholder: key,\n    onChangeText: function onChangeText(value) {\n      return setkey(_objectSpread(_objectSpread({}, key), {}, {\n        word: value\n      }));\n    }\n  }), 'key' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.key) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\")), React.createElement(Button, null, \"Buscar\")), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'codigo' in errors\n  }, React.createElement(FormControl.Label, null, \"Codigo\"), React.createElement(Label, {\n    value: data.codigo\n  }))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'inicio' in errors\n  }, React.createElement(FormControl.Label, null, \"Fecha de inicio\"), React.createElement(DatePicker, {\n    selected: data.inicio,\n    onChange: function onChange(date) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        inicio: date\n      }));\n    }\n  }), 'inicio' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.inicio) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Verificar fecha\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'fin' in errors\n  }, React.createElement(FormControl.Label, null, \"Fecha de fin\"), React.createElement(DatePicker, {\n    selected: data.fecha,\n    onChange: function onChange(date) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        fin: date\n      }));\n    }\n  }), 'fin' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.fin) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Verificar fecha\"))), React.createElement(VStack, null, React.createElement(Button, null, \"Crear\"), React.createElement(Button, null, \"Actualizar\"), React.createElement(Button, null, \"Borrar\")));\n};\nvar peso = {\n  codigo: '',\n  arete: '',\n  fecha: new Date(),\n  kg: 0.0\n};\nexport var Pesaje = function Pesaje(_ref8) {\n  var navigation = _ref8.navigation;\n\n  var _React$useState27 = React.useState({\n    type: 'nombre',\n    word: ''\n  }),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      key = _React$useState28[0],\n      setKey = _React$useState28[1];\n\n  var _React$useState29 = React.useState(ctlSanitario),\n      _React$useState30 = _slicedToArray(_React$useState29, 2),\n      data = _React$useState30[0],\n      setData = _React$useState30[1];\n\n  var _React$useState31 = React.useState({}),\n      _React$useState32 = _slicedToArray(_React$useState31, 2),\n      errors = _React$useState32[0],\n      setErrors = _React$useState32[1];\n\n  var user = React.useContext(UserContext);\n  return React.createElement(NativeBaseProvider, null, React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(Select, {\n    selectedValue: key.type,\n    minWidth: \"200\",\n    placeholder: \"Busqueda\",\n    mt: 1,\n    onValueChange: function onValueChange(itemValue) {\n      return setKey(_objectSpread(_objectSpread({}, key), {}, {\n        type: itemValue\n      }));\n    }\n  }, React.createElement(Select.Item, {\n    label: \"Peso\",\n    value: \"peso\"\n  }), React.createElement(Select.Item, {\n    label: \"Fecha\",\n    value: \"fecha\"\n  })), React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Busqueda\"), React.createElement(Input, {\n    placeholder: key.type,\n    onChangeText: function onChangeText(value) {\n      return setkey(_objectSpread(_objectSpread({}, key), {}, {\n        word: value\n      }));\n    }\n  }), 'key' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.key) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\")), React.createElement(Button, null, \"Buscar\")), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'codigo' in errors\n  }, React.createElement(FormControl.Label, null, \"Codigo\"), React.createElement(Label, {\n    value: data.codigo\n  }))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'arete' in errors\n  }, React.createElement(FormControl.Label, null, \"Arete\"), React.createElement(Input, {\n    placeholder: \"Arete\",\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        arete: value\n      }));\n    }\n  }))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'fecha' in errors\n  }, React.createElement(FormControl.Label, null, \"Fecha\"), React.createElement(DatePicker, {\n    selected: data.fecha,\n    onChange: function onChange(date) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        fecha: date\n      }));\n    }\n  }), 'fecha' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.fecha) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\"))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'peso' in errors\n  }, React.createElement(FormControl.Label, null, \"Peso\"), React.createElement(Input, {\n    placeholder: \"Peso\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        peso: value\n      }));\n    }\n  }))), React.createElement(VStack, null, React.createElement(Button, null, \"Crear\"), React.createElement(Button, null, \"Actualizar\"), React.createElement(Button, null, \"Borrar\")));\n};\nvar predio = {\n  nombre: '',\n  extension: 0.0,\n  agua: true,\n  pasto: true\n};\nexport var Predio = function Predio(_ref9) {\n  var navitagion = _ref9.navitagion;\n\n  var _React$useState33 = React.useState({\n    type: 'nombre',\n    word: ''\n  }),\n      _React$useState34 = _slicedToArray(_React$useState33, 2),\n      key = _React$useState34[0],\n      setKey = _React$useState34[1];\n\n  var _React$useState35 = React.useState(vacuna),\n      _React$useState36 = _slicedToArray(_React$useState35, 2),\n      data = _React$useState36[0],\n      setData = _React$useState36[1];\n\n  var _React$useState37 = React.useState({}),\n      _React$useState38 = _slicedToArray(_React$useState37, 2),\n      errors = _React$useState38[0],\n      setErrors = _React$useState38[1];\n\n  var user = React.useContext(UserContext);\n  return React.createElement(NativeBaseProvider, null, React.createElement(VStack, {\n    alignItems: \"center\",\n    space: 4\n  }, React.createElement(FormControl, null, React.createElement(FormControl.Label, null, \"Nombre\"), React.createElement(Input, {\n    placeholder: key.type,\n    onChangeText: function onChangeText(value) {\n      return setkey(_objectSpread(_objectSpread({}, key), {}, {\n        word: value\n      }));\n    }\n  }), 'key' in errors ? React.createElement(FormControl.ErrorMessage, {\n    _text: {\n      fontSize: 'xs',\n      color: 'error.500',\n      fontWeight: 500\n    }\n  }, errors.key) : React.createElement(FormControl.HelperText, {\n    _text: {\n      fontSize: 'xs'\n    }\n  }, \"Diferenciar MAYUS de MINUS\")), React.createElement(Button, null, \"Buscar\")), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'nombre' in errors\n  }, React.createElement(FormControl.Label, null, \"Nombre\"), React.createElement(Input, {\n    placeholder: \"Nombre\",\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        nombre: value\n      }));\n    }\n  }))), React.createElement(VStack, null, React.createElement(FormControl, {\n    isInvalid: 'extension' in errors\n  }, React.createElement(FormControl.Label, null, \"Extension \"), React.createElement(Input, {\n    placeholder: \"Extension en hectareas\",\n    onChangeText: function onChangeText(value) {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        extension: value\n      }));\n    }\n  }))), React.createElement(VStack, null, React.createElement(Switch, {\n    onToggle: function onToggle() {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        agua: !agua\n      }));\n    }\n  })), React.createElement(VStack, null, React.createElement(Switch, {\n    onToggle: function onToggle() {\n      return setData(_objectSpread(_objectSpread({}, data), {}, {\n        pasto: !pasto\n      }));\n    }\n  })), React.createElement(VStack, null, React.createElement(Button, null, \"Crear\"), React.createElement(Button, null, \"Actualizar\"), React.createElement(Button, null, \"Borrar\")));\n};\nexport var Configuracion = function Configuracion(_ref10) {\n  var navigation = _ref10.navigation;\n};","map":{"version":3,"sources":["/home/doncrow/miRancho/miRancho-React/screens.js"],"names":["React","Button","NativeBaseProvider","Box","Input","FormControl","VStack","Checkbox","Link","Switch","Select","Radio","DatePicker","UserContext","moment","LogIn","navigation","useState","data","setData","errors","setError","setUser","useContext","getUser","console","log","user","pass","handleLogin","navigate","value","fontSize","color","fontWeight","SingIn","HandleRegister","undefined","cpass","name","address","phone","terms","Terms","animal","arete","nombre","sexo","fecha","Date","format","raza","predio","Ganado","type","word","key","setKey","setErrors","itemValue","setkey","nextValue","date","vacuna","codigo","Vacunas","ctlSanitario","ControlSan","embarazo","inicio","fin","ControlRep","peso","kg","Pesaje","extension","agua","pasto","Predio","navitagion","Configuracion"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, NativeBaseProvider, Box, Input, FormControl, VStack, Checkbox, Link, Switch, Select, Radio} from 'native-base';\nimport DatePicker from \"react-datepicker\";\nimport { UserContext } from './UserContext';\nimport moment from 'moment'\n// Navegacion de Inicio //\n\n//Screen LogIn\nexport const LogIn = ({navigation}) => {\n    const [data, setData] = React.useState({});\n    const [errors, setError] = React.useState({});\n    const setUser = React.useContext(UserContext);\n    const getUser = async () => {\n        console.log(data.user,data.pass)\n        return data.user;\n    }\n    const handleLogin = () => {\n        navigation.navigate('rancho')\n        //Validar\n        /* \n        console.log(\"validando\")\n        if (data.user === undefined || data.user === ''){\n            setError({...errors,user:'Se necesita un usuario'})\n            return false;\n        }   \n        if (data.pass === undefined || data.pass === ''){\n            setError({...errors,pass:'Se necesita una contraseña'})\n            return false;\n        }\n        const user = getUser();\n         \n        setUser(user);\n        */\n        //Peticion HTTP\n        // Establece el user de context\n        \n    }\n   \n    return(\n        <NativeBaseProvider>\n            <Box>\n                <VStack><FormControl isRequired isInvalid={'user' in errors}>\n                        <FormControl.Label>Nombre de Usuario</FormControl.Label>\n                        <Input \n                            placeholder='Usuario'\n                            onChangeText={(value) => setData({...data, user:value})}\n                        />\n                        {'user' in errors ?\n                        <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.user}</FormControl.ErrorMessage>:\n                            <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                        }\n                    \n                </FormControl></VStack>\n                <VStack>\n                    <FormControl isRequired isInvalid={'pass' in errors}>\n                        <FormControl.Label>Contraseña</FormControl.Label>\n                        <Input \n                            placeholder='Contraseña'\n                            type = 'password'\n                            onChangeText={(value) => setData({...data, pass:value})}\n                        />\n                        {'pass' in errors ?\n                        <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.pass}</FormControl.ErrorMessage>:\n                            <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                        }\n                    </FormControl>\n                </VStack>\n                <Button onPress={() => navigation.navigate('rancho')}>Entrar</Button>\n            </Box>\n            <Box>\n                <Button onPress={() => navigation.navigate('singin')}>No tengo cuenta</Button>\n            </Box>\n        </NativeBaseProvider>\n    );\n}\n//Screen SignIn\nexport const SingIn = ({navigation}) => {\n    const [data, setData] = React.useState({});\n        // user,name,pass,cpass,address, phone, terms.\n    const [errors, setError] = React.useState({});\n \n    const HandleRegister = () => {\n        if (data.user === undefined ) {\n            setError(...errors, {user:'Se necesita usuario'})\n            return false;\n        }\n        if (data.pass === undefined ) {\n            setError(...errors, {pass:'Se necesita contraseña'})\n            return false;\n        }\n        if (data.cpass === undefined ) {\n            setError(...errors, {pass:'Se necesita confirmar la contraseña'})\n            return false;\n        }\n        if (data.name === undefined ) {\n            setError(...errors, {name:'Se necesita el nombre'})\n            return false;\n        }\n        if (data.address === undefined ) {\n            setError(...errors, {address:'Se necesita domicilio'})\n            return false;\n        }\n        if (data.phone === undefined ) {\n            setError(...errors, {phone:'Se necesita número de celular'})\n            return false;\n        }\n        if (data.terms === undefined ) {\n            setError(...errors, {terms:'Se aceptar los términos y condiciones de uso'})\n            return false;\n        }\n        if (data.pass != data.cpass){\n            setError(...errors, {pass:'Las contraseñas no coinciden'})\n            return false;\n        }\n        // Comprobar si existe el usuario\n        //Comprobar el telefono \n    }\n    return (\n        <NativeBaseProvider>\n\n            <VStack><FormControl isRequired isInvalid={'user' in errors}>\n                <FormControl.Label>Nombre de Usuario (Se sugiere usar la CURP)</FormControl.Label>\n                <Input \n                    p={2} \n                    placeholder='Usuario'\n                    onChangeText={(value) => setData(...data, {user: value})}\n                />\n                {'user' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.user}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n\n            <VStack><FormControl isRequired isInvalid={'pass' in errors}>\n                <FormControl.Label>Contraseña</FormControl.Label>\n                <Input \n                    p={2} \n                    placeholder='Contraseña'\n                    onChangeText={(value) => setData(...data, {pass:value})}\n                    type = 'password'\n                />\n                <Input\n                    p={2}\n                    placeholder='Confirmar contraseña'\n                    onChangeText={(value)=> setData(...data, {cpass:value})}\n                    type = 'password'\n                />\n                {'pass' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.pass}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n            \n            <VStack><FormControl isRequired isInvalid={'name' in errors}>\n                <FormControl.Label>Nombre Completo</FormControl.Label>\n                <Input \n                    p={2} \n                    placeholder='Nombre'\n                    onChangeText={(value) => setData(...data, {name:value})}\n                />\n                {'name' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.name}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Escriba nombre completo</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n\n            <VStack><FormControl isRequired isInvalid={'address' in errors}>\n            <FormControl.Label>Domicilio</FormControl.Label>\n            <Input \n                p={2} \n                placeholder='Domicilio'\n                onChangeText={(value) => setData(...data, {address:value})}\n            />\n\n            {'address' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.address}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Agregue un domicilio</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n            \n            <VStack><FormControl isRequired isInvalid={'phone' in errors}>\n                <FormControl.Label>Teléfono</FormControl.Label>\n                <Input \n                    p={2} \n                    placeholder='Teléfono'\n                    onChangeText={(value) => setData(...data, {phone:value})}\n                />\n                {'user' in errors ?\n                    <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.phone}</FormControl.ErrorMessage>:\n                        <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                    }\n            </FormControl></VStack>\n\n            <VStack><FormControl isRequired isInvalid={'terms' in errors}>\n                <Checkbox onChange={() => setData(...data, {terms:value})}>\n                    Aceptar  \n                    <Link onPress={()=>navigation.navigate('terms')}> terminos y condiciones de uso</Link>\n                </Checkbox>\n                    \n            </FormControl></VStack>\n\n            <VStack><Button onPress={HandleRegister}>Registrar</Button></VStack>\n        </NativeBaseProvider>\n    );\n}\n//Screen Terms\nexport const Terms = ({navigation}) => {\n    return(\n        <NativeBaseProvider>\n            <Box>\n                Aqui estan los terminos y condiciones jeje\n            </Box>\n        </NativeBaseProvider>\n    );\n}\n\n// Navegacion \"Rancho\" //\n\n//Screen Ganado\nvar animal = {\n    arete:'',\n    nombre:'',\n    sexo:'',\n    fecha:new Date(moment().format('DD-MM-YYYY')),\n    raza:'',\n    color:'',\n    predio:'',\n}\nexport const Ganado = ({navigation}) => {\n    const [key, setKey] = React.useState({type:'arete',word:''})\n    const [data,setData] = React.useState(animal)\n    const [errors, setErrors] = React.useState({})\n    const user = React.useContext(UserContext)\n    return (\n        <NativeBaseProvider>\n            <VStack alignItems=\"center\" space={4}>\n                <Select\n                    selectedValue={key.type}\n                    mt={1}\n                    onValueChange={(itemValue) => setKey({...key, type:itemValue})}\n                >\n                    <Select.Item label=\"Nombre\" value=\"nombre\" />\n                    <Select.Item label=\"Arete\" value=\"arete\" />\n                </Select>\n                <FormControl isInvalid={'search' in errors}>\n                    <FormControl.Label>Busqueda</FormControl.Label>\n                        <Input \n                            placeholder={key.type}\n                            onChangeText={(value) => setkey({...key, word:value})}\n                        />\n                        {'key' in errors ?\n                        <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.key}</FormControl.ErrorMessage>:\n                            <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                        }\n                </FormControl>\n                <Button >Buscar</Button>\n            </VStack>\n\n\n            <VStack><FormControl isInvalid={'arete' in errors}>\n                <FormControl.Label>Arete</FormControl.Label>\n                <Input\n                    placeholder={data.arete}\n                    //onChangeText = {(value) => setData({...data, arete:value})}\n                />\n                {'arete' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.arete}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n\n\n            <VStack><FormControl isInvalid={'nombre' in errors}>\n                <FormControl.Label>Nombre</FormControl.Label>\n                <Input\n                    placeholder={data.nombre}\n                    onChangeText = {(value) => setData({...data, nombre:value})}\n                />\n                {'nombre' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.nombre}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n\n\n            <VStack><FormControl isInvalid={'sexo' in errors}>\n                <FormControl.Label>Sexo</FormControl.Label>\n                <Radio.Group\n                name=\"sexo\"\n                accessibilityLabel=\"sexo\"\n                value={data.sexo}\n                onChange={(nextValue) => {\n                    setData({...data, sexo:nextValue})\n                }}\n                >\n                    <Radio value=\"M\" my={1}>\n                        Masculino\n                    </Radio>\n                    <Radio value=\"F\" my={1}>\n                        Femenino\n                    </Radio>\n                </Radio.Group>\n                {'sexo' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.sexo}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n\n\n            <VStack><FormControl isInvalid={'fecha' in errors}>\n                <FormControl.Label>Fecha</FormControl.Label>\n                <DatePicker selected={data.fecha} onChange={(date) => setData({...data, fecha:date})} />\n                {'fecha' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.fecha}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n\n\n            <VStack><FormControl isInvalid={'raza' in errors}>\n                <FormControl.Label>Raza</FormControl.Label>\n                <Input\n                    placeholder={data.raza}\n                    onChangeText = {(value) => setData({...data, raza:value})}\n                />\n                {'raza' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.raza}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n\n\n            <VStack><FormControl isInvalid={'color' in errors}>\n                <FormControl.Label>Color</FormControl.Label>\n                <Input\n                    placeholder={data.color}\n                    onChangeText = {(value) => setData({...data, color:value})}\n                />\n                {'color' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.color}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n\n\n            <VStack><FormControl isInvalid={'predio' in errors}>\n                <FormControl.Label>Predio</FormControl.Label>\n                <Input\n                    placeholder={data.predio}\n                    onChangeText = {(value) => setData({...data, predio:value})}\n                />\n                {'predio' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.predio}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n            <VStack>\n                <Button>Crear</Button>\n                <Button>Actualizar</Button>\n                <Button>Eliminar</Button>\n            </VStack>\n            <VStack>\n                <Button>Control Sanitario</Button>\n                <Button>Control Reproductivo</Button>\n                <Button>Vacunas</Button>\n                <Button>Pesajes</Button>\n            </VStack>\n        </NativeBaseProvider>\n    );\n}\n//Screen Vacunas\nvar vacuna = {\n    codigo:'',\n    nombre:'',\n    fecha: new Date(),\n}\nexport const Vacunas = ({navigation }) => {\n    const [key, setKey] = React.useState({type:'arete',word:''})\n    const [data,setData] = React.useState(vacuna)\n    const [errors, setErrors] = React.useState({})\n    const user = React.useContext(UserContext)\n    return (\n        <NativeBaseProvider>\n\n\n            <VStack alignItems=\"center\" space={4}>\n                <Select\n                    selectedValue={key.type}\n                    placeholder=\"Busqueda\"\n                    mt={1}\n                    onValueChange={(itemValue) => setKey({...key, type:itemValue})}\n                >\n                    <Select.Item label=\"Nombre\" value=\"nombre\" />\n                    <Select.Item label=\"Fecha\" value=\"fecha\" />\n                </Select>\n                <FormControl>\n                    <FormControl.Label>Busqueda</FormControl.Label>\n                        <Input \n                            placeholder={key}\n                            onChangeText={(value) => setkey({...key, word:value})}\n                        />\n                        {'key' in errors ?\n                        <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.key}</FormControl.ErrorMessage>:\n                            <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                        }\n                </FormControl>\n                <Button >Buscar</Button>\n            </VStack>\n\n            <VStack><FormControl isInvalid={'codigo' in errors}>\n                <FormControl.Label>Codigo</FormControl.Label>\n                <Input\n                    placeholder='Codigo'\n                    onChangeText={(value) => setData({...data, codigo:value})}\n                />\n            </FormControl></VStack>\n            <VStack><FormControl isInvalid={'nombre' in errors}>\n                <FormControl.Label>Codigo</FormControl.Label>\n                <Input\n                    placeholder='Nombre'\n                    onChangeText={(value) => setData({...data, nombre:value})}\n                />\n            </FormControl></VStack>\n            <VStack><FormControl isInvalid={'fecha' in errors}>\n                <FormControl.Label>Fecha</FormControl.Label>\n                <DatePicker selected={data.fecha} onChange={(date) => setData({...data, fecha:date})} />\n                {'fecha' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.fecha}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n            <VStack>\n                <Button>Crear</Button>\n                <Button>Actualizar</Button>\n                <Button>Borrar</Button>\n            </VStack>\n\n        </NativeBaseProvider>\n    );\n\n}\n\n//Screen Sanitario\nvar ctlSanitario = {\n    codigo:'',\n    nombre:'',\n    fecha: new Date(),\n}\nexport const ControlSan = ({navigation}) =>{\n    const [key, setKey] = React.useState({type:'nombre',word:''})\n    const [data,setData] = React.useState(ctlSanitario)\n    const [errors, setErrors] = React.useState({})\n    const user = React.useContext(UserContext)\n    return (\n        <NativeBaseProvider>\n\n            <VStack alignItems=\"center\" space={4}>\n                <Select\n                    selectedValue={key.type}\n                    minWidth=\"200\"\n                    placeholder=\"Busqueda\"\n                    mt={1}\n                    onValueChange={(itemValue) => setKey({...key, type:itemValue})}\n                >\n                    <Select.Item label=\"Nombre\" value=\"nombre\" />\n                    <Select.Item label=\"Fecha\" value=\"fecha\" />\n                </Select>\n                <FormControl>\n                    <FormControl.Label>Busqueda</FormControl.Label>\n                        <Input \n                            placeholder={key.type}\n                            onChangeText={(value) => setkey({...key, word:value})}\n                        />\n                        {'key' in errors ?\n                        <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.key}</FormControl.ErrorMessage>:\n                            <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                        }\n                </FormControl>\n                <Button >Buscar</Button>\n            </VStack>\n\n            <VStack><FormControl isInvalid={'codigo' in errors}>\n                <FormControl.Label>Codigo</FormControl.Label>\n                <Input\n                    placeholder='Codigo'\n                    onChangeText={(value) => setData({...data, codigo:value})}\n                />\n            </FormControl></VStack>\n            <VStack><FormControl isInvalid={'nombre' in errors}>\n                <FormControl.Label>Codigo</FormControl.Label>\n                <Input\n                    placeholder='Nombre'\n                    onChangeText={(value) => setData({...data, nombre:value})}\n                />\n            </FormControl></VStack>\n            <VStack><FormControl isInvalid={'fecha' in errors}>\n                <FormControl.Label>Fecha</FormControl.Label>\n                <DatePicker selected={data.fecha} onChange={(date) => setData({...data, fecha:date})} />\n                {'fecha' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.fecha}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n            <VStack>\n                <Button>Crear</Button>\n                <Button>Actualizar</Button>\n                <Button>Borrar</Button>\n            </VStack>\n\n        </NativeBaseProvider>\n    );\n}\n\n//Screen Control Reproductivo\nvar embarazo = {\n    codigo:'',\n    inicio: new Date(),\n    fin: new Date(),\n}\nexport const ControlRep = ({navigation}) => {\n    <NativeBaseProvider>\n\n        <VStack alignItems=\"center\" space={4}>\n            <Select\n                selectedValue={key.type}\n                minWidth=\"200\"\n                placeholder=\"Busqueda\"\n                mt={1}\n                onValueChange={(itemValue) => setKey({...key, type:itemValue})}\n            >\n                <Select.Item label=\"Arete\" value=\"codigo\" />\n                <Select.Item label=\"Fecha\" value=\"fecha\" />\n            </Select>\n            <FormControl>\n                <FormControl.Label>Busqueda</FormControl.Label>\n                    <Input \n                        placeholder={key}\n                        onChangeText={(value) => setkey({...key, word:value})}\n                    />\n                    {'key' in errors ?\n                    <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.key}</FormControl.ErrorMessage>:\n                        <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                    }\n            </FormControl>\n            <Button >Buscar</Button>\n        </VStack>\n\n        <VStack><FormControl isInvalid={'codigo' in errors}>\n            <FormControl.Label>Codigo</FormControl.Label>\n            <Label value={data.codigo}/>\n        </FormControl></VStack>\n\n        <VStack><FormControl isInvalid={'inicio' in errors}>\n            <FormControl.Label>Fecha de inicio</FormControl.Label>\n            <DatePicker selected={data.inicio} onChange={(date) => setData({...data, inicio:date})} />\n            {'inicio' in errors ?\n            <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.inicio}</FormControl.ErrorMessage>:\n                <FormControl.HelperText _text={{fontSize: 'xs'}}>Verificar fecha</FormControl.HelperText>\n            }\n        </FormControl></VStack>\n\n        <VStack><FormControl isInvalid={'fin' in errors}>\n            <FormControl.Label>Fecha de fin</FormControl.Label>\n            <DatePicker selected={data.fecha} onChange={(date) => setData({...data, fin:date})} />\n            {'fin' in errors ?\n            <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.fin}</FormControl.ErrorMessage>:\n                <FormControl.HelperText _text={{fontSize: 'xs'}}>Verificar fecha</FormControl.HelperText>\n            }\n        </FormControl></VStack>\n        <VStack>\n            <Button>Crear</Button>\n            <Button>Actualizar</Button>\n            <Button>Borrar</Button>\n        </VStack>\n    </NativeBaseProvider>\n}\n\n//Screen Pesajes\n\nvar peso = {\n    codigo:'',\n    arete:'',\n    fecha: new Date(),\n    kg:0.0,\n}\nexport const Pesaje = ({navigation}) => {\n    const [key, setKey] = React.useState({type:'nombre',word:''})\n    const [data,setData] = React.useState(ctlSanitario)\n    const [errors, setErrors] = React.useState({})\n    const user = React.useContext(UserContext)\n    return (\n        <NativeBaseProvider>\n\n            <VStack alignItems=\"center\" space={4}>\n                <Select\n                    selectedValue={key.type}\n                    minWidth=\"200\"\n                    placeholder=\"Busqueda\"\n                    mt={1}\n                    onValueChange={(itemValue) => setKey({...key, type:itemValue})}\n                >\n                    <Select.Item label=\"Peso\" value=\"peso\" />\n                    <Select.Item label=\"Fecha\" value=\"fecha\" />\n                </Select>\n                <FormControl>\n                    <FormControl.Label>Busqueda</FormControl.Label>\n                        <Input \n                            placeholder={key.type}\n                            onChangeText={(value) => setkey({...key, word:value})}\n                        />\n                        {'key' in errors ?\n                        <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.key}</FormControl.ErrorMessage>:\n                            <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                        }\n                </FormControl>\n                <Button >Buscar</Button>\n            </VStack>\n\n            <VStack><FormControl isInvalid={'codigo' in errors}>\n                <FormControl.Label>Codigo</FormControl.Label>\n                <Label value={data.codigo}/>\n            </FormControl></VStack>\n            <VStack><FormControl isInvalid={'arete' in errors}>\n                <FormControl.Label>Arete</FormControl.Label>\n                <Input\n                    placeholder='Arete'\n                    onChangeText={(value) => setData({...data, arete:value})}\n                />\n            </FormControl></VStack>\n            <VStack><FormControl isInvalid={'fecha' in errors}>\n                <FormControl.Label>Fecha</FormControl.Label>\n                <DatePicker selected={data.fecha} onChange={(date) => setData({...data, fecha:date})} />\n                {'fecha' in errors ?\n                <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.fecha}</FormControl.ErrorMessage>:\n                    <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                }\n            </FormControl></VStack>\n            <VStack><FormControl isInvalid={'peso' in errors}>\n                <FormControl.Label>Peso</FormControl.Label>\n                <Input\n                    placeholder='Peso'\n                    keyboardType='numeric'\n                    onChangeText={(value) => setData({...data, peso:value})}\n                />\n            </FormControl></VStack>\n            <VStack>\n                <Button>Crear</Button>\n                <Button>Actualizar</Button>\n                <Button>Borrar</Button>\n            </VStack>\n\n        </NativeBaseProvider>\n    );\n}\n\n//Screen Predios\nvar predio = {\n    nombre:'',\n    extension: 0.0,\n    agua: true,\n    pasto: true,\n}\nexport const Predio = ( {navitagion}) => {\n    const [key, setKey] = React.useState({type:'nombre',word:''})\n    const [data,setData] = React.useState(vacuna)\n    const [errors, setErrors] = React.useState({})\n    const user = React.useContext(UserContext)\n    return (\n        <NativeBaseProvider>\n\n            <VStack alignItems=\"center\" space={4}>\n                <FormControl>\n                    <FormControl.Label>Nombre</FormControl.Label>\n                        <Input \n                            placeholder={key.type}\n                            onChangeText={(value) => setkey({...key, word:value})}\n                        />\n                        {'key' in errors ?\n                        <FormControl.ErrorMessage _text={{fontSize: 'xs', color: 'error.500', fontWeight: 500}}>{errors.key}</FormControl.ErrorMessage>:\n                            <FormControl.HelperText _text={{fontSize: 'xs'}}>Diferenciar MAYUS de MINUS</FormControl.HelperText>\n                        }\n                </FormControl>\n                <Button >Buscar</Button>\n            </VStack>\n\n            <VStack><FormControl isInvalid={'nombre' in errors}>\n                <FormControl.Label>Nombre</FormControl.Label>\n                <Input\n                    placeholder='Nombre'\n                    onChangeText={(value) => setData({...data, nombre:value})}\n                />\n            </FormControl></VStack>\n            <VStack><FormControl isInvalid={'extension' in errors}>\n                <FormControl.Label>Extension </FormControl.Label>\n                <Input\n                    placeholder='Extension en hectareas'\n                    onChangeText={(value) => setData({...data, extension:value})}\n                />\n            </FormControl></VStack>\n            <VStack>\n                <Switch onToggle={()=> setData({...data, agua:!agua})}/>\n            </VStack>\n            <VStack>\n                <Switch onToggle={()=> setData({...data, pasto:!pasto})}/>\n            </VStack>\n            <VStack>\n                <Button>Crear</Button>\n                <Button>Actualizar</Button>\n                <Button>Borrar</Button>\n            </VStack>\n\n        </NativeBaseProvider>\n    );\n}\n//Screen Configuracion\nexport const Configuracion = ({navigation}) => {\n\n}"]},"metadata":{},"sourceType":"module"}