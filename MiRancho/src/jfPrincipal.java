
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class jfPrincipal extends javax.swing.JFrame {
    
    public jfPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jpanPrincipal = new javax.swing.JTabbedPane();
        jpGanado = new javax.swing.JPanel();
        jpBuscarGanado = new javax.swing.JPanel();
        jselBusquedaGanado = new javax.swing.JComboBox<>();
        txtGBuscar = new javax.swing.JTextField();
        btnGBuscar = new javax.swing.JButton();
        jpSeleccionGanado = new javax.swing.JPanel();
        jpAreteGanado = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtGArete = new javax.swing.JTextField();
        jpNombreGanado = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtGNombre = new javax.swing.JTextField();
        jpNombreGanado1 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        txtGPropietario = new javax.swing.JTextField();
        jpSexoGanado = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        rbtnGMasculino = new javax.swing.JRadioButton();
        rbtnGFemenino = new javax.swing.JRadioButton();
        jpFechaNacimiento = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        dteChsGFechaNacimiento = new datechooser.beans.DateChooserCombo();
        jpRazaGanado = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtGRaza = new javax.swing.JTextField();
        jpColorGanado = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtGColor = new javax.swing.JTextField();
        jpNombreGanado2 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        txtGPredio = new javax.swing.JTextField();
        jpBotonesGanado = new javax.swing.JPanel();
        jpBotonesGanado1 = new javax.swing.JPanel();
        btnGCrear = new javax.swing.JButton();
        btnGModificar = new javax.swing.JButton();
        btbGEliminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnGControlSanitario = new javax.swing.JButton();
        btnGControlReproductivo = new javax.swing.JButton();
        btnGVacunas = new javax.swing.JButton();
        btnGPesajes = new javax.swing.JButton();
        jpUsuario = new javax.swing.JPanel();
        jpBuscarUsuario = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        txtUBuscar = new javax.swing.JTextField();
        btnUBuscar = new javax.swing.JButton();
        jpSeleccionUsuario = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtUUsuario = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtUNombre = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtUDomicilio = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtUTelefono = new javax.swing.JTextField();
        jpBotonesUsuario = new javax.swing.JPanel();
        btnCrearUsuario = new javax.swing.JButton();
        btnBorrarUsuario = new javax.swing.JButton();
        btnActualizarUsuario = new javax.swing.JButton();
        jpPredio = new javax.swing.JPanel();
        jpBuscarUsuario1 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        txtPBuscar = new javax.swing.JTextField();
        btnPBuscar = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        txtPPropietario = new javax.swing.JTextField();
        jpSeleccionUsuario1 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtPNombre = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        spnPExtension = new javax.swing.JSpinner();
        jLabel28 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        chkbxPAgua = new javax.swing.JCheckBox();
        chkbxPPasto = new javax.swing.JCheckBox();
        jpBotonesUsuario1 = new javax.swing.JPanel();
        btnPCrear = new javax.swing.JButton();
        btnPBorrar = new javax.swing.JButton();
        btnPActualizar = new javax.swing.JButton();
        jpVacunas = new javax.swing.JPanel();
        jpBuscarGanado1 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        txtVBuscar = new javax.swing.JTextField();
        btnVBuscar = new javax.swing.JButton();
        jpAreteGanado1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtVCodigo = new javax.swing.JTextField();
        jpAreteGanado2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtVNombre = new javax.swing.JTextField();
        jpFechaNacimiento1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        dataChsVFecha = new datechooser.beans.DateChooserCombo();
        jPanel6 = new javax.swing.JPanel();
        btnVCrear = new javax.swing.JButton();
        btnVActualizar = new javax.swing.JButton();
        btnVBorrar = new javax.swing.JButton();
        jpControlSanitario = new javax.swing.JPanel();
        jpBuscarGanado2 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        txtSBuscar = new javax.swing.JTextField();
        btnSBuscar = new javax.swing.JButton();
        jpAreteGanado4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtSCodigo = new javax.swing.JTextField();
        jpAreteGanado3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtSNombre = new javax.swing.JTextField();
        jpFechaNacimiento2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        dateChsSFecha = new datechooser.beans.DateChooserCombo();
        jPanel7 = new javax.swing.JPanel();
        btnSCrear = new javax.swing.JButton();
        btnSActualizar = new javax.swing.JButton();
        btnSBorrar = new javax.swing.JButton();
        jpControlReproductivo = new javax.swing.JPanel();
        jpBuscarGanado3 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        txtRBuscar = new javax.swing.JTextField();
        btnRBuscar = new javax.swing.JButton();
        jpAreteGanado5 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtRCodigo = new javax.swing.JTextField();
        jpAreteGanado6 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtRPadre = new javax.swing.JTextField();
        jpAreteGanado7 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txtRMadre = new javax.swing.JTextField();
        jpAreteGanado8 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        txtRCria = new javax.swing.JTextField();
        jpFechaNacimiento3 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        dateChsRFecundacion = new datechooser.beans.DateChooserCombo();
        jpFechaNacimiento4 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        dateChsRCulminacion = new datechooser.beans.DateChooserCombo();
        jPanel8 = new javax.swing.JPanel();
        btnRCrear = new javax.swing.JButton();
        btnRActualizar = new javax.swing.JButton();
        btnRBorrar = new javax.swing.JButton();
        jpPesaje = new javax.swing.JPanel();
        jpBuscarGanado4 = new javax.swing.JPanel();
        jselBusquedaGanado2 = new javax.swing.JComboBox<>();
        txtKBsucar = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        txtKCodigo = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        txtKArete = new javax.swing.JTextField();
        jpFechaNacimiento5 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        dateChsKFecha = new datechooser.beans.DateChooserCombo();
        jPanel15 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        spnKPeso = new javax.swing.JSpinner();
        jLabel36 = new javax.swing.JLabel();
        jpBotonesUsuario2 = new javax.swing.JPanel();
        btnKCrear = new javax.swing.JButton();
        btnKBorrar = new javax.swing.JButton();
        btnKActualizar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MiRancho");

        jpGanado.setLayout(new javax.swing.BoxLayout(jpGanado, javax.swing.BoxLayout.Y_AXIS));

        jpBuscarGanado.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jselBusquedaGanado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arete", "Nombre" }));
        jpBuscarGanado.add(jselBusquedaGanado);

        txtGBuscar.setPreferredSize(new java.awt.Dimension(150, 20));
        jpBuscarGanado.add(txtGBuscar);

        btnGBuscar.setText("Buscar");
        btnGBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGBuscarActionPerformed(evt);
            }
        });
        jpBuscarGanado.add(btnGBuscar);

        jpGanado.add(jpBuscarGanado);

        jpSeleccionGanado.setLayout(new javax.swing.BoxLayout(jpSeleccionGanado, javax.swing.BoxLayout.Y_AXIS));

        jpAreteGanado.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel4.setText("Arete");
        jpAreteGanado.add(jLabel4);

        txtGArete.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtGArete.setMinimumSize(new java.awt.Dimension(15, 40));
        txtGArete.setPreferredSize(new java.awt.Dimension(150, 20));
        txtGArete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGAreteActionPerformed(evt);
            }
        });
        jpAreteGanado.add(txtGArete);

        jpSeleccionGanado.add(jpAreteGanado);

        jpNombreGanado.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Nombre");
        jpNombreGanado.add(jLabel5);

        txtGNombre.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtGNombre.setPreferredSize(new java.awt.Dimension(150, 20));
        txtGNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGNombreActionPerformed(evt);
            }
        });
        jpNombreGanado.add(txtGNombre);

        jpSeleccionGanado.add(jpNombreGanado);

        jpNombreGanado1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel25.setText("Propietario");
        jpNombreGanado1.add(jLabel25);

        txtGPropietario.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtGPropietario.setToolTipText("");
        txtGPropietario.setPreferredSize(new java.awt.Dimension(150, 20));
        txtGPropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGPropietarioActionPerformed(evt);
            }
        });
        jpNombreGanado1.add(txtGPropietario);

        jpSeleccionGanado.add(jpNombreGanado1);

        jpSexoGanado.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel6.setText("Sexo");
        jpSexoGanado.add(jLabel6);

        rbtnGMasculino.setText("M");
        jpSexoGanado.add(rbtnGMasculino);

        rbtnGFemenino.setText("F");
        jpSexoGanado.add(rbtnGFemenino);

        jpSeleccionGanado.add(jpSexoGanado);

        jpFechaNacimiento.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel7.setText("Fecha de Nacimiento");
        jpFechaNacimiento.add(jLabel7);
        jpFechaNacimiento.add(dteChsGFechaNacimiento);

        jpSeleccionGanado.add(jpFechaNacimiento);

        jpRazaGanado.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel8.setText("Raza");
        jpRazaGanado.add(jLabel8);

        txtGRaza.setPreferredSize(new java.awt.Dimension(150, 20));
        txtGRaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGRazaActionPerformed(evt);
            }
        });
        jpRazaGanado.add(txtGRaza);

        jpSeleccionGanado.add(jpRazaGanado);

        jpColorGanado.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING));

        jLabel9.setText("Color");
        jpColorGanado.add(jLabel9);

        txtGColor.setPreferredSize(new java.awt.Dimension(150, 20));
        txtGColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGColorActionPerformed(evt);
            }
        });
        jpColorGanado.add(txtGColor);

        jpSeleccionGanado.add(jpColorGanado);

        jpNombreGanado2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel38.setText("Predio");
        jpNombreGanado2.add(jLabel38);

        txtGPredio.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtGPredio.setPreferredSize(new java.awt.Dimension(150, 20));
        txtGPredio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGPredioActionPerformed(evt);
            }
        });
        jpNombreGanado2.add(txtGPredio);

        jpSeleccionGanado.add(jpNombreGanado2);

        jpGanado.add(jpSeleccionGanado);

        jpBotonesGanado.setLayout(new javax.swing.BoxLayout(jpBotonesGanado, javax.swing.BoxLayout.Y_AXIS));

        btnGCrear.setText("Crear");
        btnGCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGCrearActionPerformed(evt);
            }
        });
        jpBotonesGanado1.add(btnGCrear);

        btnGModificar.setText("Modificar");
        btnGModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGModificarActionPerformed(evt);
            }
        });
        jpBotonesGanado1.add(btnGModificar);

        btbGEliminar.setText("Eliminar");
        btbGEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbGEliminarActionPerformed(evt);
            }
        });
        jpBotonesGanado1.add(btbGEliminar);

        jpBotonesGanado.add(jpBotonesGanado1);

        btnGControlSanitario.setText("Control Sanitario");
        jPanel1.add(btnGControlSanitario);

        btnGControlReproductivo.setText("Control Reproductivo");
        jPanel1.add(btnGControlReproductivo);

        btnGVacunas.setText("Vacunas");
        jPanel1.add(btnGVacunas);

        btnGPesajes.setText("Pesajes");
        jPanel1.add(btnGPesajes);

        jpBotonesGanado.add(jPanel1);

        jpGanado.add(jpBotonesGanado);

        jpanPrincipal.addTab("Ganado", jpGanado);

        jpUsuario.setLayout(new javax.swing.BoxLayout(jpUsuario, javax.swing.BoxLayout.Y_AXIS));

        jpBuscarUsuario.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel32.setText("Ingrese el usuario");
        jpBuscarUsuario.add(jLabel32);

        txtUBuscar.setPreferredSize(new java.awt.Dimension(150, 20));
        jpBuscarUsuario.add(txtUBuscar);

        btnUBuscar.setText("Buscar");
        btnUBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUBuscarActionPerformed(evt);
            }
        });
        jpBuscarUsuario.add(btnUBuscar);

        jpUsuario.add(jpBuscarUsuario);

        jpSeleccionUsuario.setLayout(new javax.swing.BoxLayout(jpSeleccionUsuario, javax.swing.BoxLayout.Y_AXIS));

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Usuario");
        jPanel2.add(jLabel1);

        txtUUsuario.setPreferredSize(new java.awt.Dimension(150, 20));
        txtUUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUUsuarioActionPerformed(evt);
            }
        });
        jPanel2.add(txtUUsuario);

        jpSeleccionUsuario.add(jPanel2);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Nombre");
        jPanel3.add(jLabel2);

        txtUNombre.setPreferredSize(new java.awt.Dimension(150, 20));
        txtUNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUNombreActionPerformed(evt);
            }
        });
        jPanel3.add(txtUNombre);

        jpSeleccionUsuario.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Domicilio");
        jPanel4.add(jLabel10);

        txtUDomicilio.setPreferredSize(new java.awt.Dimension(150, 20));
        txtUDomicilio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUDomicilioActionPerformed(evt);
            }
        });
        jPanel4.add(txtUDomicilio);

        jpSeleccionUsuario.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Teléfono");
        jPanel5.add(jLabel11);

        txtUTelefono.setPreferredSize(new java.awt.Dimension(150, 20));
        txtUTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUTelefonoActionPerformed(evt);
            }
        });
        jPanel5.add(txtUTelefono);

        jpSeleccionUsuario.add(jPanel5);

        jpUsuario.add(jpSeleccionUsuario);

        btnCrearUsuario.setText("Crear");
        btnCrearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearUsuarioActionPerformed(evt);
            }
        });
        jpBotonesUsuario.add(btnCrearUsuario);

        btnBorrarUsuario.setText("Borrar");
        btnBorrarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarUsuarioActionPerformed(evt);
            }
        });
        jpBotonesUsuario.add(btnBorrarUsuario);

        btnActualizarUsuario.setText("Actualizar");
        btnActualizarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarUsuarioActionPerformed(evt);
            }
        });
        jpBotonesUsuario.add(btnActualizarUsuario);

        jpUsuario.add(jpBotonesUsuario);

        jpanPrincipal.addTab("Usuario", jpUsuario);

        jpPredio.setLayout(new javax.swing.BoxLayout(jpPredio, javax.swing.BoxLayout.Y_AXIS));

        jpBuscarUsuario1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel29.setText("Ingrese el nombre");
        jpBuscarUsuario1.add(jLabel29);

        txtPBuscar.setPreferredSize(new java.awt.Dimension(150, 20));
        jpBuscarUsuario1.add(txtPBuscar);

        btnPBuscar.setText("Buscar");
        btnPBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPBuscarActionPerformed(evt);
            }
        });
        jpBuscarUsuario1.add(btnPBuscar);

        jpPredio.add(jpBuscarUsuario1);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Propietario");
        jPanel12.add(jLabel27);

        txtPPropietario.setPreferredSize(new java.awt.Dimension(150, 20));
        txtPPropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPPropietarioActionPerformed(evt);
            }
        });
        jPanel12.add(txtPPropietario);

        jpPredio.add(jPanel12);

        jpSeleccionUsuario1.setLayout(new javax.swing.BoxLayout(jpSeleccionUsuario1, javax.swing.BoxLayout.Y_AXIS));

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Nombre");
        jPanel9.add(jLabel3);

        txtPNombre.setPreferredSize(new java.awt.Dimension(150, 20));
        txtPNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPNombreActionPerformed(evt);
            }
        });
        jPanel9.add(txtPNombre);

        jpSeleccionUsuario1.add(jPanel9);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Extensión");
        jPanel10.add(jLabel26);

        spnPExtension.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 1.0f));
        jPanel10.add(spnPExtension);

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Km2");
        jPanel10.add(jLabel28);

        jpSeleccionUsuario1.add(jPanel10);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        chkbxPAgua.setText("Agua");
        jPanel11.add(chkbxPAgua);

        chkbxPPasto.setText("Pasto");
        jPanel11.add(chkbxPPasto);

        jpSeleccionUsuario1.add(jPanel11);

        jpPredio.add(jpSeleccionUsuario1);

        btnPCrear.setText("Crear");
        btnPCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPCrearActionPerformed(evt);
            }
        });
        jpBotonesUsuario1.add(btnPCrear);

        btnPBorrar.setText("Borrar");
        btnPBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPBorrarActionPerformed(evt);
            }
        });
        jpBotonesUsuario1.add(btnPBorrar);

        btnPActualizar.setText("Actualizar");
        btnPActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPActualizarActionPerformed(evt);
            }
        });
        jpBotonesUsuario1.add(btnPActualizar);

        jpPredio.add(jpBotonesUsuario1);

        jpanPrincipal.addTab("Predio", jpPredio);

        jpVacunas.setLayout(new javax.swing.BoxLayout(jpVacunas, javax.swing.BoxLayout.Y_AXIS));

        jpBuscarGanado1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel31.setText("Ingrese el código");
        jpBuscarGanado1.add(jLabel31);

        txtVBuscar.setPreferredSize(new java.awt.Dimension(150, 20));
        jpBuscarGanado1.add(txtVBuscar);

        btnVBuscar.setText("Buscar");
        jpBuscarGanado1.add(btnVBuscar);

        jpVacunas.add(jpBuscarGanado1);

        jpAreteGanado1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel12.setText("Código");
        jpAreteGanado1.add(jLabel12);

        txtVCodigo.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtVCodigo.setMinimumSize(new java.awt.Dimension(15, 40));
        txtVCodigo.setPreferredSize(new java.awt.Dimension(150, 20));
        txtVCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVCodigoActionPerformed(evt);
            }
        });
        jpAreteGanado1.add(txtVCodigo);

        jpVacunas.add(jpAreteGanado1);

        jpAreteGanado2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel13.setText("Nombre");
        jpAreteGanado2.add(jLabel13);

        txtVNombre.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtVNombre.setMinimumSize(new java.awt.Dimension(15, 40));
        txtVNombre.setPreferredSize(new java.awt.Dimension(150, 20));
        txtVNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVNombreActionPerformed(evt);
            }
        });
        jpAreteGanado2.add(txtVNombre);

        jpVacunas.add(jpAreteGanado2);

        jpFechaNacimiento1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel14.setText("Fecha de aplicación");
        jpFechaNacimiento1.add(jLabel14);
        jpFechaNacimiento1.add(dataChsVFecha);

        jpVacunas.add(jpFechaNacimiento1);

        btnVCrear.setText("Crear");
        btnVCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVCrearActionPerformed(evt);
            }
        });
        jPanel6.add(btnVCrear);

        btnVActualizar.setText("Actualizar");
        btnVActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVActualizarActionPerformed(evt);
            }
        });
        jPanel6.add(btnVActualizar);

        btnVBorrar.setText("Borrar");
        btnVBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVBorrarActionPerformed(evt);
            }
        });
        jPanel6.add(btnVBorrar);

        jpVacunas.add(jPanel6);

        jpanPrincipal.addTab("Vacunas", jpVacunas);

        jpControlSanitario.setLayout(new javax.swing.BoxLayout(jpControlSanitario, javax.swing.BoxLayout.Y_AXIS));

        jpBuscarGanado2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel30.setText("Ingrese el código");
        jpBuscarGanado2.add(jLabel30);

        txtSBuscar.setPreferredSize(new java.awt.Dimension(150, 20));
        jpBuscarGanado2.add(txtSBuscar);

        btnSBuscar.setText("Buscar");
        jpBuscarGanado2.add(btnSBuscar);

        jpControlSanitario.add(jpBuscarGanado2);

        jpAreteGanado4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel17.setText("Código");
        jpAreteGanado4.add(jLabel17);

        txtSCodigo.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtSCodigo.setMinimumSize(new java.awt.Dimension(15, 40));
        txtSCodigo.setPreferredSize(new java.awt.Dimension(150, 20));
        txtSCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSCodigoActionPerformed(evt);
            }
        });
        jpAreteGanado4.add(txtSCodigo);

        jpControlSanitario.add(jpAreteGanado4);

        jpAreteGanado3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel16.setText("Nombre");
        jpAreteGanado3.add(jLabel16);

        txtSNombre.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtSNombre.setMinimumSize(new java.awt.Dimension(15, 40));
        txtSNombre.setPreferredSize(new java.awt.Dimension(150, 20));
        txtSNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSNombreActionPerformed(evt);
            }
        });
        jpAreteGanado3.add(txtSNombre);

        jpControlSanitario.add(jpAreteGanado3);

        jpFechaNacimiento2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel15.setText("Fecha de aplicación");
        jpFechaNacimiento2.add(jLabel15);
        jpFechaNacimiento2.add(dateChsSFecha);

        jpControlSanitario.add(jpFechaNacimiento2);

        btnSCrear.setText("Crear");
        btnSCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSCrearActionPerformed(evt);
            }
        });
        jPanel7.add(btnSCrear);

        btnSActualizar.setText("Actualizar");
        btnSActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSActualizarActionPerformed(evt);
            }
        });
        jPanel7.add(btnSActualizar);

        btnSBorrar.setText("Borrar");
        btnSBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSBorrarActionPerformed(evt);
            }
        });
        jPanel7.add(btnSBorrar);

        jpControlSanitario.add(jPanel7);

        jpanPrincipal.addTab("Control Sanitario", jpControlSanitario);

        jpControlReproductivo.setLayout(new javax.swing.BoxLayout(jpControlReproductivo, javax.swing.BoxLayout.Y_AXIS));

        jpBuscarGanado3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel24.setText("Ingrese el código");
        jpBuscarGanado3.add(jLabel24);

        txtRBuscar.setPreferredSize(new java.awt.Dimension(150, 20));
        jpBuscarGanado3.add(txtRBuscar);

        btnRBuscar.setText("Buscar");
        jpBuscarGanado3.add(btnRBuscar);

        jpControlReproductivo.add(jpBuscarGanado3);

        jpAreteGanado5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel18.setText("Código");
        jpAreteGanado5.add(jLabel18);

        txtRCodigo.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtRCodigo.setMinimumSize(new java.awt.Dimension(15, 40));
        txtRCodigo.setPreferredSize(new java.awt.Dimension(150, 20));
        txtRCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRCodigoActionPerformed(evt);
            }
        });
        jpAreteGanado5.add(txtRCodigo);

        jpControlReproductivo.add(jpAreteGanado5);

        jpAreteGanado6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel19.setText("Padre");
        jpAreteGanado6.add(jLabel19);
        jLabel19.getAccessibleContext().setAccessibleName("");
        jLabel19.getAccessibleContext().setAccessibleDescription("");

        txtRPadre.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtRPadre.setMinimumSize(new java.awt.Dimension(15, 40));
        txtRPadre.setPreferredSize(new java.awt.Dimension(150, 20));
        txtRPadre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRPadreActionPerformed(evt);
            }
        });
        jpAreteGanado6.add(txtRPadre);

        jpControlReproductivo.add(jpAreteGanado6);

        jpAreteGanado7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel20.setText("Madre");
        jpAreteGanado7.add(jLabel20);

        txtRMadre.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtRMadre.setMinimumSize(new java.awt.Dimension(15, 40));
        txtRMadre.setPreferredSize(new java.awt.Dimension(150, 20));
        txtRMadre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRMadreActionPerformed(evt);
            }
        });
        jpAreteGanado7.add(txtRMadre);

        jpControlReproductivo.add(jpAreteGanado7);

        jpAreteGanado8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel21.setText("Cria");
        jpAreteGanado8.add(jLabel21);

        txtRCria.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtRCria.setMinimumSize(new java.awt.Dimension(15, 40));
        txtRCria.setPreferredSize(new java.awt.Dimension(150, 20));
        txtRCria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRCriaActionPerformed(evt);
            }
        });
        jpAreteGanado8.add(txtRCria);

        jpControlReproductivo.add(jpAreteGanado8);

        jpFechaNacimiento3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel22.setText("Fecha de fecundación");
        jpFechaNacimiento3.add(jLabel22);
        jpFechaNacimiento3.add(dateChsRFecundacion);

        jpControlReproductivo.add(jpFechaNacimiento3);

        jpFechaNacimiento4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel23.setText("Fecha de culminación");
        jLabel23.setToolTipText("");
        jpFechaNacimiento4.add(jLabel23);
        jpFechaNacimiento4.add(dateChsRCulminacion);

        jpControlReproductivo.add(jpFechaNacimiento4);

        btnRCrear.setText("Crear");
        btnRCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRCrearActionPerformed(evt);
            }
        });
        jPanel8.add(btnRCrear);

        btnRActualizar.setText("Actualizar");
        btnRActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRActualizarActionPerformed(evt);
            }
        });
        jPanel8.add(btnRActualizar);

        btnRBorrar.setText("Borrar");
        btnRBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRBorrarActionPerformed(evt);
            }
        });
        jPanel8.add(btnRBorrar);

        jpControlReproductivo.add(jPanel8);

        jpanPrincipal.addTab("Control Reproductivo", jpControlReproductivo);

        jpPesaje.setLayout(new javax.swing.BoxLayout(jpPesaje, javax.swing.BoxLayout.Y_AXIS));

        jpBuscarGanado4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jselBusquedaGanado2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Arete" }));
        jpBuscarGanado4.add(jselBusquedaGanado2);

        txtKBsucar.setPreferredSize(new java.awt.Dimension(150, 20));
        jpBuscarGanado4.add(txtKBsucar);

        jButton15.setText("Buscar");
        jpBuscarGanado4.add(jButton15);

        jpPesaje.add(jpBuscarGanado4);

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Código");
        jPanel14.add(jLabel34);

        txtKCodigo.setPreferredSize(new java.awt.Dimension(150, 20));
        txtKCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKCodigoActionPerformed(evt);
            }
        });
        jPanel14.add(txtKCodigo);

        jpPesaje.add(jPanel14);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Arete");
        jPanel13.add(jLabel33);

        txtKArete.setPreferredSize(new java.awt.Dimension(150, 20));
        txtKArete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKAreteActionPerformed(evt);
            }
        });
        jPanel13.add(txtKArete);

        jpPesaje.add(jPanel13);

        jpFechaNacimiento5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel37.setText("Fecha");
        jpFechaNacimiento5.add(jLabel37);
        jpFechaNacimiento5.add(dateChsKFecha);

        jpPesaje.add(jpFechaNacimiento5);

        jPanel15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Peso");
        jPanel15.add(jLabel35);

        spnKPeso.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 1.0f));
        jPanel15.add(spnKPeso);

        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Kilos");
        jPanel15.add(jLabel36);

        jpPesaje.add(jPanel15);

        btnKCrear.setText("Crear");
        btnKCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKCrearActionPerformed(evt);
            }
        });
        jpBotonesUsuario2.add(btnKCrear);

        btnKBorrar.setText("Borrar");
        btnKBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKBorrarActionPerformed(evt);
            }
        });
        jpBotonesUsuario2.add(btnKBorrar);

        btnKActualizar.setText("Actualizar");
        btnKActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKActualizarActionPerformed(evt);
            }
        });
        jpBotonesUsuario2.add(btnKActualizar);

        jpPesaje.add(jpBotonesUsuario2);

        jpanPrincipal.addTab("Pesaje", jpPesaje);

        getContentPane().add(jpanPrincipal, java.awt.BorderLayout.CENTER);
        jpanPrincipal.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarTexto()
    {
        txtGBuscar.setText(null);
        txtGArete.setText(null);
        txtGNombre.setText(null);
        txtGPropietario.setText(null);
        rbtnGMasculino.setSelected(false);
        rbtnGFemenino.setSelected(false);
        txtGRaza.setText(null);
        dteChsGFechaNacimiento.setCurrent(null);
        txtGColor.setText(null);
        txtGPredio.setText(null);
        
    }
    private void txtUUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUUsuarioActionPerformed

    private void txtGAreteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGAreteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGAreteActionPerformed

    private void txtGNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGNombreActionPerformed

    private void txtGRazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGRazaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGRazaActionPerformed

    private void txtGColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGColorActionPerformed

    private void txtUDomicilioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUDomicilioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUDomicilioActionPerformed

    private void txtUTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUTelefonoActionPerformed

    private void txtUNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUNombreActionPerformed

    private void txtVCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVCodigoActionPerformed

    private void txtVNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVNombreActionPerformed

    private void btnVActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVActualizarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "UPDATE vacuna SET nombre = ?, fecha= ? "
                            + "WHERE codigo = ?");
            ps.setString(1, txtVNombre.getText());

            Date date = dataChsVFecha.getCurrent().getTime();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            ps.setDate(2, fecha);
            ps.setString(3, txtVCodigo.getText());

            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Actualización exitosa");
            else
                JOptionPane.showMessageDialog(null, "Operacion fallida");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }         // TODO add your handling code here:
    }//GEN-LAST:event_btnVActualizarActionPerformed

    private void btnVBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVBorrarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        
        try {
            ps = conexion.prepareStatement("DELETE FROM vacuna WHERE codigo = ?");
            ps.setString(1, txtVCodigo.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Eliminacion exitosa");
            else
                JOptionPane.showMessageDialog(null, "Proceso fallido");
            limpiarTexto();
        } catch (SQLException ex) {
            Logger.getLogger(jfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_btnVBorrarActionPerformed

    private void btnSActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSActualizarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "UPDATE control_sanitario SET nombre=?, fecha=? "
                            + "WHERE codigo =?");
            ps.setString(1, txtSNombre.getText());

            Date date = dateChsSFecha.getCurrent().getTime();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            ps.setDate(2, fecha);
            ps.setString(3, txtSCodigo.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Registro exitoso");
            else
                JOptionPane.showMessageDialog(null, "Registro fallido");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }        
    }//GEN-LAST:event_btnSActualizarActionPerformed

    private void btnSBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSBorrarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        
        try {
            ps = conexion.prepareStatement("DELETE FROM control_sanitario WHERE codigo = ?");
            ps.setString(1, txtSCodigo.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Eliminacion exitosa");
            else
                JOptionPane.showMessageDialog(null, "Proceso fallido");
            limpiarTexto();
        } catch (SQLException ex) {
            Logger.getLogger(jfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnSBorrarActionPerformed

    private void txtSNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSNombreActionPerformed

    private void txtSCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSCodigoActionPerformed

    private void txtRCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRCodigoActionPerformed

    private void txtRPadreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRPadreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRPadreActionPerformed

    private void txtRMadreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRMadreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRMadreActionPerformed

    private void txtRCriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRCriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRCriaActionPerformed

    private void btnRActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRActualizarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "UPDATE embarazo SET inicio = ?, fin=? "
                            + "WHERE codigo =?");
            Date date = dateChsRFecundacion.getCurrent().getTime();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            ps.setDate(1, fecha);
            
            date = dateChsRCulminacion.getCurrent().getTime();
            d = date.getTime();
            fecha = new java.sql.Date(d);
            
            ps.setDate(2,fecha);
            
            ps.setString(3,txtRCodigo.getText());
            
            int res = ps.executeUpdate();
            
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Registro exitoso");
            else
                JOptionPane.showMessageDialog(null, "Registro fallido");    
            limpiarTexto();
 
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }       
        
             // TODO add your handling code here:
    }//GEN-LAST:event_btnRActualizarActionPerformed

    private void btnRBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRBorrarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        
        try {
            ps = conexion.prepareStatement("DELETE FROM embarazo WHERE codigo = ?");
            ps.setString(1, txtRCodigo.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Eliminacion exitosa");
            else
                JOptionPane.showMessageDialog(null, "Proceso fallido");
            limpiarTexto();
        } catch (SQLException ex) {
            Logger.getLogger(jfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnRBorrarActionPerformed

    private void txtGPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGPropietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGPropietarioActionPerformed

    private void btnCrearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearUsuarioActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "INSERT INTO propietario(usuario, nombre, domicilio, telefono) "
                            + "VALUES (?,?,?,?)");
            ps.setString(1, txtUUsuario.getText());
            ps.setString(2, txtUNombre.getText());
            ps.setString(3, txtUDomicilio.getText());
            ps.setString(4, txtUTelefono.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Registro exitoso");
            else
                JOptionPane.showMessageDialog(null, "Registro fallido");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }  
    }//GEN-LAST:event_btnCrearUsuarioActionPerformed

    private void txtPNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPNombreActionPerformed

    private void btnPCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPCrearActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "INSERT INTO predio(nombre, propietario, extension, agua, pasto) "
                            + "VALUES (?,?,?,?,?)");
            ps.setString(1, txtPNombre.getText());
            ps.setString(2, txtPPropietario.getText());
            ps.setFloat(3, (float) spnPExtension.getValue());
            if(chkbxPAgua.isSelected())
                ps.setBoolean(4, true);
            else
                ps.setBoolean(4, false);
            if(chkbxPPasto.isSelected())
                ps.setBoolean(5, true);
            else
                ps.setBoolean(5, false);
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Registro exitoso");
            else
                JOptionPane.showMessageDialog(null, "Registro fallido");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }    
    }//GEN-LAST:event_btnPCrearActionPerformed

    private void txtPPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPPropietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPPropietarioActionPerformed

    private void txtKAreteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKAreteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKAreteActionPerformed

    private void txtKCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKCodigoActionPerformed

    private void btnKCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKCrearActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "INSERT INTO peso(are_animal, fecha,kilos) "
                            + "VALUES (?,?,?)");
            ps.setString(1, txtKArete.getText());

            Date date = dateChsKFecha.getCurrent().getTime();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            ps.setDate(2, fecha);
            ps.setFloat(3, (float) spnKPeso.getValue());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Registro exitoso");
            else
                JOptionPane.showMessageDialog(null, "Registro fallido");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }     
    }//GEN-LAST:event_btnKCrearActionPerformed

    private void txtGPredioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGPredioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGPredioActionPerformed

    private void btnGCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGCrearActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "INSERT INTO animal(arete, nombre, sexo, fecha_nacimineto, raza, color) "
                            + "VALUES (?,?,?,?,?,?)");
            ps.setString(1, txtGArete.getText());
            ps.setString(2, txtGNombre.getText());
            
            if(rbtnGMasculino.isSelected())
                ps.setString(3, "M");
            else
                ps.setString(3, "F");
            
            
            Date date = dteChsGFechaNacimiento.getCurrent().getTime();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            ps.setDate(4, fecha);
            ps.setString(5,txtGRaza.getText());
            ps.setString(6, txtGColor.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Registro exitoso");
            else
                JOptionPane.showMessageDialog(null, "Registro fallido");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }
    }//GEN-LAST:event_btnGCrearActionPerformed

    private void btnVCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVCrearActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "INSERT INTO vacuna(nombre, fecha) "
                            + "VALUES (?,?)");
            ps.setString(1, txtVNombre.getText());

            Date date = dataChsVFecha.getCurrent().getTime();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            ps.setDate(2, fecha);

            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Registro exitoso");
            else
                JOptionPane.showMessageDialog(null, "Registro fallido");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }     
    }//GEN-LAST:event_btnVCrearActionPerformed

    private void btnSCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSCrearActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "INSERT INTO control_sanitario(nombre, fecha) "
                            + "VALUES (?,?)");
            ps.setString(1, txtSNombre.getText());

            Date date = dateChsSFecha.getCurrent().getTime();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            ps.setDate(2, fecha);

            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Registro exitoso");
            else
                JOptionPane.showMessageDialog(null, "Registro fallido");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }     
    }//GEN-LAST:event_btnSCrearActionPerformed

    private void btnRCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRCrearActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "INSERT INTO embarazo(inicio, fin) "
                            + "VALUES (?,?)");
            Date date = dateChsRFecundacion.getCurrent().getTime();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            ps.setDate(1, fecha);
            
            date = dateChsRCulminacion.getCurrent().getTime();
            d = date.getTime();
            fecha = new java.sql.Date(d);
            
            ps.setDate(2,fecha);

            
            int res = ps.executeUpdate();
            
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Registro exitoso");
            else
                JOptionPane.showMessageDialog(null, "Registro fallido");
            
            limpiarTexto();
            
            
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }       
        
            
    }//GEN-LAST:event_btnRCrearActionPerformed

    private void btnGBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGBuscarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement("SELECT * FROM animal WHERE arete = ?");
            ps.setString(1,txtGBuscar.getText());
            rs = ps.executeQuery();
    
            if(rs.next()){
                txtGArete.setText(rs.getString("arete"));
                txtGNombre.setText(rs.getString("nombre"));
                if("M".equals(rs.getString("sexo")))
                {
                    rbtnGMasculino.setSelected(true);
                    rbtnGFemenino.setSelected(false);
                }else
                {
                    rbtnGFemenino.setSelected(true);
                    rbtnGMasculino.setSelected(false);
                }
               
                //dteChsGFechaNacimiento.setText(rs.getString("fecha_nacimiento"));
                txtGRaza.setText(rs.getString("raza"));
                txtGColor.setText(rs.getString("color"));
                
            }else
                JOptionPane.showMessageDialog(null, "No se puede encontrar registro", "Error al buscar", JOptionPane.WARNING_MESSAGE);
            } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No se puede encontrar registro", "Error al buscar", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnGBuscarActionPerformed

    private void btnUBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUBuscarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement("SELECT * FROM propietario WHERE usuario = ?");
            ps.setString(1,txtUBuscar.getText());
            rs = ps.executeQuery();
    
            if(rs.next()){
                txtUUsuario.setText(rs.getString("usuario"));
                txtUNombre.setText(rs.getString("nombre"));
                txtUDomicilio.setText(rs.getString("domicilio"));
                txtUTelefono.setText(rs.getString("telefono"));
            }
            } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No se puede encontrar registro", "Error al buscar", JOptionPane.WARNING_MESSAGE);
            }    
    }//GEN-LAST:event_btnUBuscarActionPerformed

    private void btnPBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPBuscarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement("SELECT * FROM predio WHERE nombre = ?");
            ps.setString(1,txtPBuscar.getText());
            rs = ps.executeQuery();
    
            if(rs.next()){
                txtPNombre.setText(rs.getString("nombre"));
                txtPPropietario.setText(rs.getString("propietario"));
                spnPExtension.setValue(rs.getFloat("extension"));
                if(rs.getBoolean("agua"))
                    chkbxPAgua.setSelected(true);
                else
                    chkbxPAgua.setSelected(false);
                if(rs.getBoolean("pasto"))
                    chkbxPPasto.setSelected(true);
                else
                    chkbxPPasto.setSelected(false);
            }
            } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No se puede encontrar registro", "Error al buscar", JOptionPane.WARNING_MESSAGE);
            }       
    }//GEN-LAST:event_btnPBuscarActionPerformed

    private void btbGEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbGEliminarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        
        try {
            ps = conexion.prepareStatement("DELETE FROM animal WHERE arete = ?");
            ps.setString(1, txtGArete.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Eliminacion exitosa");
            else
                JOptionPane.showMessageDialog(null, "Proceso fallido");
            limpiarTexto();
        } catch (SQLException ex) {
            Logger.getLogger(jfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btbGEliminarActionPerformed

    private void btnBorrarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarUsuarioActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        
        try {
            ps = conexion.prepareStatement("DELETE FROM propietario WHERE usuario = ?");
            ps.setString(1, txtUUsuario.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Eliminacion exitosa");
            else
                JOptionPane.showMessageDialog(null, "Proceso fallido");
            limpiarTexto();
        } catch (SQLException ex) {
            Logger.getLogger(jfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBorrarUsuarioActionPerformed

    private void btnPBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPBorrarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        
        try {
            ps = conexion.prepareStatement("DELETE FROM predio WHERE nombre = ?");
            ps.setString(1, txtPNombre.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Eliminacion exitosa");
            else
                JOptionPane.showMessageDialog(null, "Proceso fallido");
            limpiarTexto();
        } catch (SQLException ex) {
            Logger.getLogger(jfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnPBorrarActionPerformed

    private void btnKBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKBorrarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        
        try {
            ps = conexion.prepareStatement("DELETE FROM peso WHERE codigo = ?");
            ps.setString(1, txtKCodigo.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Eliminacion exitosa");
            else
                JOptionPane.showMessageDialog(null, "Proceso fallido");
            limpiarTexto();
        } catch (SQLException ex) {
            Logger.getLogger(jfPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnKBorrarActionPerformed

    private void btnGModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGModificarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "UPDATE animal SET nombre = ?, sexo = ?, fecha_nacimineto = ?, raza = ?, color= ? "
                            + "WHERE arete = ? ");

            ps.setString(1, txtGNombre.getText());
            
            if(rbtnGMasculino.isSelected())
                ps.setString(2, "M");
            else
                ps.setString(2, "F");
            
            
            Date date = dteChsGFechaNacimiento.getCurrent().getTime();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            ps.setDate(3, fecha);
            ps.setString(4,txtGRaza.getText());
            ps.setString(5, txtGColor.getText());
            ps.setString(6, txtGArete.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Actualización exitosa");
            else
                JOptionPane.showMessageDialog(null, "Operacion fallida");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Operacion Fallida");
            }        // TODO add your handling code here:
    }//GEN-LAST:event_btnGModificarActionPerformed

    private void btnActualizarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarUsuarioActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "UPDATE propietario SET nombre = ?, domicilio = ?, telefono= ?) "
                            + "WHERE usuario = ?");

            
            ps.setString(1, txtUNombre.getText());
            ps.setString(2, txtUDomicilio.getText());
            ps.setString(3, txtUTelefono.getText());
            ps.setString(4, txtUUsuario.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Actualización exitosa");
            else
                JOptionPane.showMessageDialog(null, "Actualización fallida");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }          // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarUsuarioActionPerformed

    private void btnPActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPActualizarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "UPDATE predio SET propietario = ?, extension = ?, agua = ?, pasto= ? "
                            + "WHERE nombre = ?");
            
            ps.setString(1, txtPPropietario.getText());
            ps.setFloat(2, (float) spnPExtension.getValue());
            if(chkbxPAgua.isSelected())
                ps.setBoolean(3, true);
            else
                ps.setBoolean(3, false);
            if(chkbxPPasto.isSelected())
                ps.setBoolean(4, true);
            else
                ps.setBoolean(4, false);
            ps.setString(5, txtPNombre.getText());
            
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Actualización exitosa");
            else
                JOptionPane.showMessageDialog(null, "Operación fallida");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }   
    }//GEN-LAST:event_btnPActualizarActionPerformed

    private void btnKActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKActualizarActionPerformed
        Connection conexion;
        conexion = Conexion.darConexion();
        PreparedStatement ps;
        ResultSet rs;
        
        try {
            ps = conexion.prepareStatement(
                    "UPDATE peso SET are_animal = ?, fecha = ?,kilos = ? "
                            + "WHERE codigo = ?");
            ps.setString(1, txtKArete.getText());

            Date date = dateChsKFecha.getCurrent().getTime();
            long d = date.getTime();
            java.sql.Date fecha = new java.sql.Date(d);
            
            ps.setDate(2, fecha);
            ps.setFloat(3, (float) spnKPeso.getValue());
            ps.setString(4, txtKCodigo.getText());
            int res = ps.executeUpdate();
            if(res > 0)
                JOptionPane.showMessageDialog(null, "Actualización exitosa");
            else
                JOptionPane.showMessageDialog(null, "Actualización fallida");
            limpiarTexto();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Registro fallido");
            }          // TODO add your handling code here:
    }//GEN-LAST:event_btnKActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btbGEliminar;
    private javax.swing.JButton btnActualizarUsuario;
    private javax.swing.JButton btnBorrarUsuario;
    private javax.swing.JButton btnCrearUsuario;
    private javax.swing.JButton btnGBuscar;
    private javax.swing.JButton btnGControlReproductivo;
    private javax.swing.JButton btnGControlSanitario;
    private javax.swing.JButton btnGCrear;
    private javax.swing.JButton btnGModificar;
    private javax.swing.JButton btnGPesajes;
    private javax.swing.JButton btnGVacunas;
    private javax.swing.JButton btnKActualizar;
    private javax.swing.JButton btnKBorrar;
    private javax.swing.JButton btnKCrear;
    private javax.swing.JButton btnPActualizar;
    private javax.swing.JButton btnPBorrar;
    private javax.swing.JButton btnPBuscar;
    private javax.swing.JButton btnPCrear;
    private javax.swing.JButton btnRActualizar;
    private javax.swing.JButton btnRBorrar;
    private javax.swing.JButton btnRBuscar;
    private javax.swing.JButton btnRCrear;
    private javax.swing.JButton btnSActualizar;
    private javax.swing.JButton btnSBorrar;
    private javax.swing.JButton btnSBuscar;
    private javax.swing.JButton btnSCrear;
    private javax.swing.JButton btnUBuscar;
    private javax.swing.JButton btnVActualizar;
    private javax.swing.JButton btnVBorrar;
    private javax.swing.JButton btnVBuscar;
    private javax.swing.JButton btnVCrear;
    private javax.swing.JCheckBox chkbxPAgua;
    private javax.swing.JCheckBox chkbxPPasto;
    private datechooser.beans.DateChooserCombo dataChsVFecha;
    private datechooser.beans.DateChooserCombo dateChsKFecha;
    private datechooser.beans.DateChooserCombo dateChsRCulminacion;
    private datechooser.beans.DateChooserCombo dateChsRFecundacion;
    private datechooser.beans.DateChooserCombo dateChsSFecha;
    private datechooser.beans.DateChooserCombo dteChsGFechaNacimiento;
    private javax.swing.JButton jButton15;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel jpAreteGanado;
    private javax.swing.JPanel jpAreteGanado1;
    private javax.swing.JPanel jpAreteGanado2;
    private javax.swing.JPanel jpAreteGanado3;
    private javax.swing.JPanel jpAreteGanado4;
    private javax.swing.JPanel jpAreteGanado5;
    private javax.swing.JPanel jpAreteGanado6;
    private javax.swing.JPanel jpAreteGanado7;
    private javax.swing.JPanel jpAreteGanado8;
    private javax.swing.JPanel jpBotonesGanado;
    private javax.swing.JPanel jpBotonesGanado1;
    private javax.swing.JPanel jpBotonesUsuario;
    private javax.swing.JPanel jpBotonesUsuario1;
    private javax.swing.JPanel jpBotonesUsuario2;
    private javax.swing.JPanel jpBuscarGanado;
    private javax.swing.JPanel jpBuscarGanado1;
    private javax.swing.JPanel jpBuscarGanado2;
    private javax.swing.JPanel jpBuscarGanado3;
    private javax.swing.JPanel jpBuscarGanado4;
    private javax.swing.JPanel jpBuscarUsuario;
    private javax.swing.JPanel jpBuscarUsuario1;
    private javax.swing.JPanel jpColorGanado;
    private javax.swing.JPanel jpControlReproductivo;
    private javax.swing.JPanel jpControlSanitario;
    private javax.swing.JPanel jpFechaNacimiento;
    private javax.swing.JPanel jpFechaNacimiento1;
    private javax.swing.JPanel jpFechaNacimiento2;
    private javax.swing.JPanel jpFechaNacimiento3;
    private javax.swing.JPanel jpFechaNacimiento4;
    private javax.swing.JPanel jpFechaNacimiento5;
    private javax.swing.JPanel jpGanado;
    private javax.swing.JPanel jpNombreGanado;
    private javax.swing.JPanel jpNombreGanado1;
    private javax.swing.JPanel jpNombreGanado2;
    private javax.swing.JPanel jpPesaje;
    private javax.swing.JPanel jpPredio;
    private javax.swing.JPanel jpRazaGanado;
    private javax.swing.JPanel jpSeleccionGanado;
    private javax.swing.JPanel jpSeleccionUsuario;
    private javax.swing.JPanel jpSeleccionUsuario1;
    private javax.swing.JPanel jpSexoGanado;
    private javax.swing.JPanel jpUsuario;
    private javax.swing.JPanel jpVacunas;
    private javax.swing.JTabbedPane jpanPrincipal;
    private javax.swing.JComboBox<String> jselBusquedaGanado;
    private javax.swing.JComboBox<String> jselBusquedaGanado2;
    private javax.swing.JRadioButton rbtnGFemenino;
    private javax.swing.JRadioButton rbtnGMasculino;
    private javax.swing.JSpinner spnKPeso;
    private javax.swing.JSpinner spnPExtension;
    private javax.swing.JTextField txtGArete;
    private javax.swing.JTextField txtGBuscar;
    private javax.swing.JTextField txtGColor;
    private javax.swing.JTextField txtGNombre;
    private javax.swing.JTextField txtGPredio;
    private javax.swing.JTextField txtGPropietario;
    private javax.swing.JTextField txtGRaza;
    private javax.swing.JTextField txtKArete;
    private javax.swing.JTextField txtKBsucar;
    private javax.swing.JTextField txtKCodigo;
    private javax.swing.JTextField txtPBuscar;
    private javax.swing.JTextField txtPNombre;
    private javax.swing.JTextField txtPPropietario;
    private javax.swing.JTextField txtRBuscar;
    private javax.swing.JTextField txtRCodigo;
    private javax.swing.JTextField txtRCria;
    private javax.swing.JTextField txtRMadre;
    private javax.swing.JTextField txtRPadre;
    private javax.swing.JTextField txtSBuscar;
    private javax.swing.JTextField txtSCodigo;
    private javax.swing.JTextField txtSNombre;
    private javax.swing.JTextField txtUBuscar;
    private javax.swing.JTextField txtUDomicilio;
    private javax.swing.JTextField txtUNombre;
    private javax.swing.JTextField txtUTelefono;
    private javax.swing.JTextField txtUUsuario;
    private javax.swing.JTextField txtVBuscar;
    private javax.swing.JTextField txtVCodigo;
    private javax.swing.JTextField txtVNombre;
    // End of variables declaration//GEN-END:variables
}
